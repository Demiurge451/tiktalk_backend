worker_processes auto;

events {
}

http {
	include /etc/nginx/mime.types;
        server {
                listen     80;

                location / {
                        return 301 https://$host$request_uri;
                }
        }

        server {
                listen       443 ssl http2;

                ssl_certificate     /etc/cert.pem;
                ssl_certificate_key /etc/key.pem;
                client_max_body_size 250M;

                location /tiktalk {
                        proxy_pass http://backend:8089;
		        proxy_set_header Host $host;
                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header X-Forwarded-Proto $scheme;

                        add_header Access-Control-Allow-Origin *;
                        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE,  OPTIONS";
                        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
                        add_header Access-Control-Allow-Credentials true;

                        if ($request_method = 'OPTIONS') {
                            add_header Access-Control-Allow-Origin *;
                            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS";
                            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
                            add_header Content-Length 0;
                            add_header Content-Type text/plain;
                            return 204;
                        }
                }
                location / {
                        proxy_pass http://keycloak:8080;
                        proxy_set_header Host $host;
                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header X-Forwarded-Proto $scheme;

                        add_header Access-Control-Allow-Origin *;
                        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE,  OPTIONS";
                        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
                        add_header Access-Control-Allow-Credentials true;

                        if ($request_method = 'OPTIONS') {
                            return 204;
                        }
                }
        }
        server {
               listen 443 ssl http2;
               server_name minio.tiktalkapp.ru;
               ssl_certificate     /etc/cert1.pem;
               ssl_certificate_key /etc/key1.pem;

	       client_max_body_size 250M;
               location / {
                        proxy_set_header Host $host;
                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header X-Forwarded-Proto $scheme;

                        proxy_pass http://minio:9000;
               }
        }
        server {
               listen 443 ssl http2;
               server_name web.tiktalkapp.ru;

               ssl_certificate /etc/cert2.pem;
               ssl_certificate_key /etc/key2.pem;
               client_max_body_size 250M;

               location / {
                       root /usr/share/nginx/html;
                       index index.html index.htm index.nginx-debian.html;
                       try_files $uri $uri/ /index.html;
               }
               location ~ \.js$ {
                       root /usr/share/nginx/html;
                       try_files $uri /index.html;
                       default_type application/javascript;
               }
        }
}
